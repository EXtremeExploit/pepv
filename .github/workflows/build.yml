# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Build

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive

    - name: "Install dependencies"
      run: |
        sudo apt -y update
        sudo apt -y install libgtk-3-dev libalpm-dev libarchive-dev libcurl3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Set Build number
      shell: bash
      run: echo "build_number=$(git rev-list HEAD --count)" >> $GITHUB_ENV

    - name: Compute git short sha
      shell: bash
      run: echo "git_short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Create artifacts
      shell: bash
      run: |
        mkdir artifacts
        cp build/pepv artifacts/
        cp pepv.ui artifacts/
        cp pepv.png artifacts/
        

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pepv-${{ env.build_number }}-${{ env.git_short_sha }}
        path: artifacts/
